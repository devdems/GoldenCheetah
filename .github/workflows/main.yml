name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
   windows-msvc-build:

    runs-on: windows-latest
    
    steps:
    - name: MSVC Environment Setup
      uses: ilammy/msvc-dev-cmd@v1
    - name: checkout
      uses: actions/checkout@v2 
    - name: flex/bison
      run: |
        choco install winflexbison
        ren "C:\ProgramData\chocolatey\bin\win_bison.exe" "bison.exe"
        ren "C:\ProgramData\chocolatey\bin\win_flex.exe" "flex.exe" 
        
    - name: Get SDK
      run: Invoke-webrequest -uri https://github.com/GoldenCheetah/WindowsSDK/releases/download/v0.1.1/gc-win-sdk-64bit.zip -OutFile gc-win-sdk-64bit.zip	      

    - name: Extract sdk
      run: Expand-Archive -Path gc-win-sdk-64bit.zip -DestinationPath C:\Coding     

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
          version: '5.12.2'
          modules: 'qtcharts qtwebengine'
          setup-python: 'false'
          
    - name: Prep qwt
      run: Copy-Item "D:\a\GoldenCheetah\GoldenCheetah\qwt\qwtconfig.pri.in" -Destination "D:\a\GoldenCheetah\GoldenCheetah\src\qwtconfig.pri"
      
    - name: Prep gcc
      run: |
        Copy-Item "D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri.in" -Destination "D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri"
        ((Get-Content -path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri -Raw) -replace '#CONFIG += release','CONFIG += release') | Set-Content -Path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri
        ((Get-Content -path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri -Raw) -replace '#QMAKE_LRELEASE = /usr/bin/lrelease','QMAKE_LRELEASE = lrelease') | Set-Content -Path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri
        ((Get-Content -path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri -Raw) -replace '#WINKIT_INSTALL= "C:/Program Files (x86)/Windows Kits/8.1/Lib/winv6.3/um/x64"','WINKIT_INSTALL = "c:\Program Files (x86)\Windows Kits\10\Lib\10.0.18362.0\um\x64"') | Set-Content -Path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri
        ((Get-Content -path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri -Raw) -replace '#QMAKE_LEX = win_flex','QMAKE_LEX = win_flex --wincompat') | Set-Content -Path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri
        ((Get-Content -path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri -Raw) -replace '#QMAKE_YACC = win_bison','QMAKE_YACC = win_bison --file-prefix=y -t') | Set-Content -Path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri
        ((Get-Content -path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri -Raw) -replace '#HTPATH = ../httpserver','HTPATH = ../httpserver') | Set-Content -Path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri
        ((Get-Content -path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri -Raw) -replace '#DEFINES += GC_WANT_ROBOT','DEFINES += GC_WANT_ROBOT') | Set-Content -Path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri
        "DEFINES += NOWEBKIT" | Add-Content D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri.
        "CONFIG += lex" | Add-Content D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri. 
        "CONFIG += yacc" | Add-Content D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri. 
        "lex.CONFIG += target_predeps" | Add-Content D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri.
        "yacc_impl.CONFIG += target_predeps" | Add-Content D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri. 
        "yacc_decl.CONFIG += target_predeps" | Add-Content D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri. 
        "GC_COMPONENTS=C:\Coding\gc-win-sdk-64bit" | Add-Content D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri. 
        
    - name: show gcc
      run: Get-Content -path D:\a\GoldenCheetah\GoldenCheetah\src\gccconfig.pri   
      
    - name: Create Makefile
      run: |
        Invoke-Expression "& 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat' amd64"
        qmake -o Makefile build.pro -spec winrt-x64-msvc2019 
      
    - name: Run MakeFile
      run: qmake build.pro
      
    - name: Run jom
      run: jom qmake_all && jom
        
    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: build\
