name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
   windows-msvc-build:

    runs-on: windows-latest
    
    steps:
    - name: MSVC Environment Setup
      uses: ilammy/msvc-dev-cmd@v1
      
    - name: checkout
      uses: actions/checkout@v2
       
    - name: Create Timestamp
      id: create_timestamp
      run: $buildTime = Get-Date -Format "yyyyMMddHHmmss"; Write-Host "::set-output name=release_datestamp::$buildTime"
          
    - name: Install flex/bison
      run:  choco install winflexbison
        
    - name: Install jom
      run: choco install jom
        
    - name: Get SDK
      run: Invoke-webrequest -uri https://github.com/GoldenCheetah/WindowsSDK/releases/download/v0.1.1/gc-win-sdk-64bit.zip -OutFile gc-win-sdk-64bit.zip	      
      
    - name: Extract sdk
      run: Expand-Archive -Path gc-win-sdk-64bit.zip -DestinationPath C:\Coding 

    - name: Get GSL
      run: Invoke-webrequest -uri https://github.com/microsoft/vcpkg/archive/2020.11-1.zip -OutFile 2020.11-1.zip

    - name: Extract GSL
      run: Expand-Archive -Path 2020.11-1.zip -DestinationPath C:\Coding

    - name: Run GSL
      run: C:\Coding\vcpkg-2020.11-1\bootstrap-vcpkg.bat 

    - name: Run vcpkg
      run: C:\Coding\vcpkg-2020.11-1\vcpkg install gsl --triplet x64-windows
    
    - name: Prep qwt
      run: Copy-Item "qwt\qwtconfig.pri.in" -Destination "qwt\qwtconfig.pri"
      
    - name: Prep gcc
      run: |
        Copy-Item "src\gcconfig.pri.in" -Destination "src\gcconfig.pri"
        (Get-Content src\gcconfig.pri ).Replace('#CONFIG += release','CONFIG += release') | Out-File src\gcconfig.pri
        (Get-Content src\gcconfig.pri ).Replace('#QMAKE_LRELEASE = /usr/bin/lrelease','QMAKE_LRELEASE = lrelease') | Out-File src\gcconfig.pri
        (Get-Content src\gcconfig.pri ).Replace('#WINKIT_INSTALL= "C:/Program Files (x86)/Windows Kits/8.1/Lib/winv6.3/um/x64"','WINKIT_INSTALL = "c:\Program Files (x86)\Windows Kits\10\Lib\10.0.19041.0\um\x64"') | Out-File src\gcconfig.pri
        (Get-Content src\gcconfig.pri ).Replace('#QMAKE_LEX = win_flex','QMAKE_LEX = win_flex --wincompat') | Out-File src\gcconfig.pri  
        (Get-Content src\gcconfig.pri ).Replace('#QMAKE_YACC = win_bison','QMAKE_YACC = win_bison --file-prefix=y -t') | Out-File src\gcconfig.pri  
        (Get-Content src\gcconfig.pri ).Replace('#HTPATH = ../httpserver','HTPATH = ../httpserver') | Out-File src\gcconfig.pri                  
        (Get-Content src\gcconfig.pri ).Replace('#DEFINES += GC_WANT_ROBOT','DEFINES += GC_WANT_ROBOT') | Out-File src\gcconfig.pri
        (Get-Content src\gcconfig.pri ).Replace('# VLC_INSTALL = /usr/local/vlc','VLC_INSTALL = C:\Coding\gc-win-sdk-64bit') | Out-File src\gcconfig.pri 
        (Get-Content src\gcconfig.pri ).Replace('#VLC_INCLUDE =','VLC_INCLUDE = $${VLC_INSTALL}\common\VLC\win64\include') | Out-File src\gcconfig.pri 
        (Get-Content src\gcconfig.pri ).Replace('#VLC_LIBS    =','VLC_LIBS    = -L$${VLC_INSTALL}\common\VLC\win64\lib -llibvlc -llibvlccore') | Out-File src\gcconfig.pri
        (Get-Content src\gcconfig.pri ).Replace('#DEFINES += GC_VIDEO_VLC','DEFINES += GC_VIDEO_VLC') | Out-File src\gcconfig.pri    
        "DEFINES += NOWEBKIT" | Add-Content src\gcconfig.pri.
        "CONFIG += lex" | Add-Content src\gcconfig.pri. 
        "CONFIG += yacc" | Add-Content src\gcconfig.pri. 
        "lex.CONFIG += target_predeps" | Add-Content src\gcconfig.pri.
        "yacc_impl.CONFIG += target_predeps" | Add-Content src\gcconfig.pri. 
        "yacc_decl.CONFIG += target_predeps" | Add-Content src\gcconfig.pri. 
        "GC_COMPONENTS=C:\Coding\gc-win-sdk-64bit" | Add-Content src\gcconfig.pri.
        "DEFINES += GC_WANT_GSL" | Add-Content src\gcconfig.pri.
        "GSL_INCLUDES = C:\Coding\vcpkg-2020.11-1\packages\gsl_x64-windows\include" | Add-Content src\gcconfig.pri.
        "GSL_LIBS = -LC:\Coding\vcpkg-2020.11-1\packages\gsl_x64-windows\lib -lgsl -lgslcblas" | Add-Content src\gcconfig.pri.
        
    - name: Show gcc
      run: Get-Content -path src\gcconfig.pri   

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.2'
        modules: 'qtcharts qtwebengine qtwebenginecore qtwebenginewidgets'

    - name: Build
      run: |
        Invoke-Expression "& 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat' amd64"
        qmake build.pro -r -spec win32-msvc
        cd qwt
        jom -j1
        cd..
        jom -j2
                  
    - name: Rename file
      run: Copy-Item "src\release\GoldenCheetah.exe" -Destination "src\release\GoldenCheetah-${{ steps.create_timestamp.outputs.release_datestamp }}.exe"
      
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: src\release\GoldenCheetah-${{ steps.create_timestamp.outputs.release_datestamp }}.exe
        tag: ${{ github.ref }}-nightly-${{ steps.create_timestamp.outputs.release_datestamp }}
        prerelease: true
        release_name: "Nightly Development Build - ${{ steps.create_timestamp.outputs.release_datestamp }}" 
